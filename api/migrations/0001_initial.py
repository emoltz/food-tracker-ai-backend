# Generated by Django 5.0.3 on 2024-05-15 22:01

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=255)),
                ('calories_min', models.FloatField(default=0)),
                ('calories_max', models.FloatField(default=0)),
                ('protein_min', models.FloatField(default=0)),
                ('protein_max', models.FloatField(default=0)),
                ('total_fat_min', models.FloatField(default=0)),
                ('total_fat_max', models.FloatField(default=0)),
                ('saturated_fat_min', models.FloatField(default=0)),
                ('saturated_fat_max', models.FloatField(default=0)),
                ('carbohydrates_min', models.FloatField(default=0)),
                ('carbohydrates_max', models.FloatField(default=0)),
                ('sugar_min', models.FloatField(default=0)),
                ('sugar_max', models.FloatField(default=0)),
                ('fiber_min', models.FloatField(default=0)),
                ('fiber_max', models.FloatField(default=0)),
                ('cholesterol_min', models.FloatField(default=0)),
                ('cholesterol_max', models.FloatField(default=0)),
                ('sodium_grams_min', models.FloatField(default=0)),
                ('sodium_grams_max', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=255)),
                ('meal_type', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack'), ('other', 'Other'), ('n/a', 'Na')], default='n/a', max_length=10)),
                ('date', models.DateField(auto_now_add=True)),
                ('assumed_total_min_calories', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_max_calories', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_min_protein', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_max_protein', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_min_total_fat', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_max_total_fat', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_min_saturated_fat', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_max_saturated_fat', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_min_carbohydrates', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_max_carbohydrates', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_min_sugar', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_max_sugar', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_min_fiber', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_max_fiber', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_min_cholesterol', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_max_cholesterol', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_min_sodium_grams', models.FloatField(blank=True, default=0, null=True)),
                ('assumed_total_max_sodium_grams', models.FloatField(blank=True, default=0, null=True)),
                ('meal_items', models.ManyToManyField(to='api.food')),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sender', models.CharField(choices=[('user', 'user'), ('bot', 'bot')], max_length=100)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.meal')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.FloatField(default=0)),
                ('weight', models.FloatField(default=0)),
                ('age', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='meal',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userprofile'),
        ),
        migrations.AlterUniqueTogether(
            name='meal',
            unique_together={('meal_type', 'date')},
        ),
    ]
